#
# A virtual host using mix of IP-, name-, and port-based configuration
#

server {
    listen       80;
    server_name  *.{{ app_domain }};
    rewrite ^(.*)$ https://$host$1 last;
}

server {
    listen       443 ssl;
    server_name  *.{{ app_domain }};

    root {{ app_root_path }}/web;
    charset utf-8;
    sendfile off;
    client_max_body_size 60M;

    # ssl
    ssl_certificate      server.crt;
    ssl_certificate_key  server.key;
    ssl_session_timeout  5m;
    ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:ECDHE-RSA-DES-CBC3-SHA:ECDHE-ECDSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
    ssl_prefer_server_ciphers   on;

    add_header Strict-Transport-Security max-age=31536000;
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Content-Type-Options nosniff;

    {% if nginx_use_basic %}
    auth_basic "Please enter your ID and password";
    auth_basic_user_file conf.d/_{{ app_domain }}.htpasswd;
    {% endif %}

    server_tokens off;

    location ~ \.(jpg|png|gif|swf|jpeg)$ {
        log_not_found off;
        access_log off;
        expires 1w;
        break;
    }

    location ~ \.(ico|eot|svg|ttf|woff)$ {
        log_not_found off;
        access_log off;
        expires max;
        break;
    }

    location ~ \.(css|js)$ {
        charset  UTF-8;
        access_log off;
        expires 1w;
        break;
    }

    location / {
        # try to serve file directly, fallback to rewrite
        try_files $uri @rewriteindex;
    }

    location @rewriteindex {
        # rewrite all to index.php
        rewrite ^(.*)$ /index.php/$1 last;
    }

    location ~ ^/(index|index_dev|apc)\.php(/|$) {
        # fastcgi_pass   127.0.0.1:9000;
        fastcgi_pass unix:/var/run/php-fpm.sock;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param HTTPS on;
    }
}
